on:
  workflow_call:
    inputs:
      GCP_PROJECT_ID:
        required: true
        type: string
      GCP_WORKLOAD_IDENTITY_PROVIDER:
        required: true
        type: string
      GCP_SERVICE_ACCOUNT:
        required: true
        type: string
      GCP_STORAGE_BUCKET_NAME:
        required: true
        type: string
      GCP_STORAGE_FILE_NAME:
        required: true
        type: string
      GCP_STORAGE_EMBEDDING_FILE_NAME:
        required: true
        type: string

jobs:
  provision:
    name: 'Provision and deploy'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: 'Authenticate with GCP'
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ inputs.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ inputs.GCP_SERVICE_ACCOUNT }}

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ inputs.GCP_PROJECT_ID }}

      - name: Update secrets in GCP Secret Manager
        run: |
          printf -- "${{ secrets.NOTION_TOKEN }}" | gcloud secrets versions add notion-token --data-file=-
          printf -- "${{ secrets.SLACK_BOT_TOKEN }}" | gcloud secrets versions add slack-bot-token --data-file=-
          printf -- "${{ secrets.SLACK_SIGNING_SECRET }}" | gcloud secrets versions add slack-signing-secret --data-file=-
          printf -- "${{ secrets.OPENAI_API_KEY }}" | gcloud secrets versions add open-api-key --data-file=-

      - name: 'Deploy embedding-creation to Cloud Run'
        id: deploy-embedding-creation
        run: >-
          gcloud functions deploy embedding-creation 
          --runtime=python311 
          --memory=512MB
          --region=europe-west1
          --gen2
          --source=./packages/embeddings-creation 
          --entry-point=create_embeddings
          --trigger-event-filters="bucket=${{ inputs.GCP_STORAGE_BUCKET_NAME }}"
          --trigger-event-filters-path-pattern="resourceName=/projects/_/buckets/${{ inputs.GCP_STORAGE_BUCKET_NAME }}/objects/${{ inputs.GCP_STORAGE_FILE_NAME }}"
          --set-secrets=OPENAI_API_KEY=projects/${{ inputs.GCP_PROJECT_ID }}/secrets/open-api-key:latest
          --set-env-vars=GCP_STORAGE_FILE_NAME=${{ inputs.GCP_STORAGE_FILE_NAME }}
          --set-env-vars=GCP_STORAGE_EMBEDDING_FILE_NAME=${{ inputs.GCP_STORAGE_EMBEDDING_FILE_NAME }}

      - name: 'Deploy crawl to Cloud Run'
        id: deploy-webhook
        run: >-
          gcloud functions deploy crawl
          --runtime=nodejs18
          --region=europe-west1
          --memory=256Mb
          --gen2
          --source=./packages/crawler
          --entry-point crawl
          --trigger-topic=crawler-topic
          --set-secrets=NOTION_TOKEN=projects/${{ inputs.GCP_PROJECT_ID }}/secrets/notion-token:latest
          --set-env-vars=GCP_STORAGE_BUCKET_NAME=${{ inputs.GCP_STORAGE_BUCKET_NAME }}
          --set-env-vars=GCP_STORAGE_FILE_NAME=${{ inputs.GCP_STORAGE_FILE_NAME }}

      - name: 'Deploy slackBot to Cloud Run'
        id: deploy-slack-bot
        run: >-
          gcloud functions deploy slackbot
          --runtime python311 
          --memory=512MB
          --region=europe-west1
          --gen2
          --source=./packages/slack-bot
          --entry-point=slack_bot 
          --trigger-http 
          --allow-unauthenticated 
          --set-secrets=SLACK_BOT_TOKEN=projects/${{ inputs.GCP_PROJECT_ID }}/secrets/slack-bot-token:latest
          --set-secrets=SLACK_SIGNING_SECRET=projects/${{ inputs.GCP_PROJECT_ID }}/secrets/slack-signing-secret:latest
          --set-secrets=OPENAI_API_KEY=projects/${{ inputs.GCP_PROJECT_ID }}/secrets/open-api-key:latest

      - name: 'Show summary'
        run: >-
          echo "App successfully deployed."
